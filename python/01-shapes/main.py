# стоки начинающиеся после символа `#` это коментарии
# и итнепрпертатор python будет их игнорировать
# функция позволит определить кусок кода
# который нам будет удобно переиспользовать в различных местах
# сделаем функцию для вывода в консоль информации о шаре
def itemOutput(item): # функция принимает параметр `item` это наш шар
        # ведем переменных помошников которые нам помогут
        # обращатся к полям наших кортежей в более понятной форме
        # по сути они просто содержат номера полей в которых лежат данные
        color = 0; # цвет
        dimentions = 1; # диаметр
        weight = 2; # вес

        # вспомните я вам рассказывал про функцию `format` которая помогает запихивать данные в строку
        print('shape color={} dimentions={} weight={}'.format( #определим места в которыч нужно вывести данные как `{}` туда будут подставлены данные которые мы передаём функции `format`
                #далее мы передаём данные которые нужно вывести в местах которые в строке определены как `{}`
                item[color], # берём цвет шара
                item[dimentions], # берём диаметр шара
                item[weight] # берём вес шара
                )
        )


bucket = [ # определим нашу исходную корзину из которой будем брать шары она будет представлена листом
('red', 1, 1), # каждый шар у нас будет представлен кортежем (цвет, зазмер, вес)
('blue', 1, 1),
('red', 2, 1),
('green', 1, 4),
('red', 1, 4),
('green', 1, 2),
('red', 1, 4),
('blue', 1, 4),
('red', 1, 4),
('blue', 1, 2),
('red', 1, 1)
];
# таким образом у нас получился лист состоящий из кортежей

# каждая корзина для сортировки у нас так же будет представлена листом
# но пустым так как в них ничего нет по началу
bucket1=[];
bucket2=[];
bucket3=[];
bucket4=[];


# ведем переменных помошников которые нам помогут
# обращатся к полям наших кортежей в более понятной форме
# по сути они просто содержат номера полей в которых лежат данные
color = 0; # цвет
dimentions = 1; # диаметр
weight = 2; # вес


# будем перебирать шары для этого воспользуемся циклом
for i in range(0, len(bucket)):
        item = bucket.pop(); # берём очередной шар под номером `i` из корзины и помещаем его в переменную `item`
        if ((item[color] == 'red') or (item[weight] == 6)): # условный оператор поможет нам проверить условия
                bucket1.append(item)
                continue
        if (((item[color] == 'blue') or (item[color] == 'green')) and (item[weight] < 2)): # в случае когда нам важно чтобы выполнялись 2 условия
                bucket2.append(item)
                continue
        bucket3.append(item)
        # выведим информацию о шаре который проверили
        itemOutput(item) # можно было написать так `itemOutput(item)`


# когда нам важно чтобы выполнялись  все условия используйте оператор `and` выше пример
# его можно стыкоать в цепочку:
# <условие1> and <условие2> and <условие3> and .... and <условие_x>

# когда нам важно чтобы выполнялось хотябы одно условие используйте оператор `or`
# его так же можно стыкоать в цепочку:
# <условие1> or <условие2> or <условие3> or .... or <условие_x>

# таким образом чтобы в корзину поподали нескольно различных типов шаров
# надо сделать несколько проверок и класть шары в одну и ту же корзину
# например:
# if (item[color] == 'red'): # условный оператор поможет нам проверить условия
#       bucket1.append(item)
# if ((item[color] == 'blue') and (item[weight] < 2)): # в случае когда нам важно чтобы выполнялись 2 условия
#       bucket1.append(item)


# или можно использовать условный оператор или(or)
# if ((item[color] == 'red') or ((item[color] == 'blue') and (item[weight] < 2))):
#       bucket1.append(item)
# внимательно посмотриете на скобки, они указывают порядок выполнения операций

# и наконец проверим что у нас лежит в первой корзине

def bucketInfo(bucketName, bucket):
        print('Output for {} bucket:\n['.format(bucketName))
        for i in range(0, len(bucket)):
                itemOutput(bucket[i])
        print(']')

bucketInfo('red', bucket1)
bucketInfo('origin', bucket)
bucketInfo('trash', bucket3)
bucketInfo('blue', bucket2)
